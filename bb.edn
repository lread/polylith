{;; Parts of this script have been copied from: https://github.com/clj-commons/etaoin/blob/master/bb.edn

 :min-bb-version "1.3.182"
 :paths ["." "scripts"]
 :deps {lread/status-line {:git/url "https://github.com/lread/status-line.git"
                           :sha "cf44c15f30ea3867227fa61ceb823e5e942c707f"}}
 :tasks
 {;; setup
  :requires ([clojure.string :as string]
             [lread.status-line :as status])
  :enter (let [{:keys [name]} (current-task)]
           (when-not (string/starts-with? name "-")
             (status/line :head "TASK %s %s" name (string/join " " *command-line-args*))))
  :leave (let [{:keys [name]} (current-task)]
           (when-not (string/starts-with? name "-")
             (status/line :detail "\nTASK %s done." name)))

  ;; commands
  jar {:doc "Builds projects/poly/target/poly.jar"
       :task (shell/command "clojure -T:build uberjar :project poly")}

  poly-local {:doc "Installs the poly tool locally"
              :depends [jar]
              :task (shell/command "sudo cp projects/poly/target/poly.jar /usr/local/polylith/poly.jar")}

  polyx-jar {:doc "Builds projects/polyx/target/polyx.jar"
             :task (shell/command "clojure -T:build uberjar :project polyx")}

  polyx-local {:doc "Installs the polyx tool locally"
               :depends [polyx-jar]
               :task (shell/command "sudo cp projects/polyx/target/polyx.jar /usr/local/polylith/poly.jar")}

  doc {:doc "preview what docs will look like on cljdoc, use help for args"
       :task cljdoc-preview/-main}}}
